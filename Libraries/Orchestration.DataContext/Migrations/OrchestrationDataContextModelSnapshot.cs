// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Orchestration.DataContext;

#nullable disable

namespace Orchestration.DataContext.Migrations
{
    [DbContext(typeof(OrchestrationDataContext))]
    partial class OrchestrationDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.11");

            modelBuilder.Entity("Orchestration.DataContext.Models.Credential", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("KeyData")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("KeyPassword")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Credentials");
                });

            modelBuilder.Entity("Orchestration.DataContext.Models.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CredentialId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DeviceGatewayId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("HostName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Port")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CredentialId");

                    b.HasIndex("DeviceGatewayId");

                    b.HasIndex("Name");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("Orchestration.DataContext.Models.DeviceGateway", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Certificate")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("HostName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Port")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Name", "HostName", "Port");

                    b.ToTable("DeviceGateways");
                });

            modelBuilder.Entity("Orchestration.DataContext.Models.Device", b =>
                {
                    b.HasOne("Orchestration.DataContext.Models.Credential", "Credential")
                        .WithMany()
                        .HasForeignKey("CredentialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Orchestration.DataContext.Models.DeviceGateway", "DeviceGateway")
                        .WithMany("Devices")
                        .HasForeignKey("DeviceGatewayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Credential");

                    b.Navigation("DeviceGateway");
                });

            modelBuilder.Entity("Orchestration.DataContext.Models.DeviceGateway", b =>
                {
                    b.Navigation("Devices");
                });
#pragma warning restore 612, 618
        }
    }
}
